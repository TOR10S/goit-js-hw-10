{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector(\"input#datetime-picker\");\nconst button = document.querySelector(\"button\");\nconst daysText = document.querySelector(\"[data-days]\");\nconst hoursText = document.querySelector(\"[data-hours]\");\nconst minutesText = document.querySelector(\"[data-minutes]\");\nconst secondsText = document.querySelector(\"[data-seconds]\");\nbutton.disabled=true;\n\nlet userSelectedDate = null; \nlet intervalId = null;\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      if (userSelectedDate <= new Date()) {\n        window.alert(\"Please choose a date in the future\");\n        button.disabled=true;\n      } else {\n        button.disabled=false;\n      }\n    },\n  };\n\n  flatpickr(input, options);\n\n  button.addEventListener(\"click\", () => {\n    button.disabled=true;\n    input.disabled=true;\n    intervalId = setInterval(timeCountdown, 1000);\n  })\n\n  function timeCountdown() {\n    currentDate = new Date();\n    dateDifference = userSelectedDate - currentDate;\n    updateTextContents();\n  }\n  \n  const {days, hours, minutes, seconds} = convertMs(dateDifference);\n  \n  function updateTextContents({days, hours, minutes, seconds}) {\n    daysText.textContent = addLeadingZero(days);\n    hoursText.textContent = addLeadingZero(hours);\n    minutesText.textContent = addLeadingZero(minutes);\n    secondsText.textContent = addLeadingZero(seconds);\n  }\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n"],"names":["input","button","daysText","hoursText","minutesText","secondsText","userSelectedDate","options","selectedDates","flatpickr","timeCountdown","updateTextContents","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"svBAKA,MAAMA,EAAQ,SAAS,cAAc,uBAAuB,EACtDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3DJ,EAAO,SAAS,GAEhB,IAAIK,EAAmB,KAIvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,IAAI,MAC1B,OAAO,MAAM,oCAAoC,EACjDL,EAAO,SAAS,IAEhBA,EAAO,SAAS,EAEnB,CACL,EAEEQ,EAAUT,EAAOO,CAAO,EAExBN,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAS,GAChBD,EAAM,SAAS,GACF,YAAYU,EAAe,GAAI,CAChD,CAAG,EAED,SAASA,GAAgB,CACvB,YAAc,IAAI,KAClB,eAAiBJ,EAAmB,YACpCK,GACD,CAEuCC,EAAU,cAAc,EAEhE,SAASD,EAAmB,CAAC,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAG,CAC3Dd,EAAS,YAAce,EAAeJ,CAAI,EAC1CV,EAAU,YAAcc,EAAeH,CAAK,EAC5CV,EAAY,YAAca,EAAeF,CAAO,EAChDV,EAAY,YAAcY,EAAeD,CAAO,CACjD,CAED,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASN,EAAUO,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}